version: '3.8'

name: theBoringProject

services:
    mqttserver: 
        build:
            context: .
            dockerfile: mqttserver/Dockerfile
        image: my_mqttserver_image:latest
        ports:
          - "1883:1883"
          - "9001:9001"
        networks:
            - theBoringNetwork

    database:
        build:
            context: .
            dockerfile: database/Dockerfile
        image: my_database_image:latest
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "5432:5432"
        networks:
            - theBoringNetwork


    command_runner:
        image: alpine:latest
        networks:
            - theBoringNetwork
        depends_on:    
            - database
        command: >
            sh -c "
            sleep 10 &&
            apk add --no-cache postgresql-client &&
            psql -d "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database/${POSTGRES_DB}" -c '
            CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";
            CREATE TABLE IF NOT EXISTS telemetry (
                id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
                timestamp TIMESTAMPTZ NOT NULL DEFAULT NOW(),
                device_id UUID NOT NULL,
                name VARCHAR(100) NOT NULL,
                value VARCHAR(100) NOT NULL,
                type VARCHAR(100) NOT NULL
            );'
            "

    connector: 
        build:
            context: .
            dockerfile: connector/Dockerfile
        image: my_connector_image:latest
        environment:
            MQTT_HOST: mqtt://mqttserver
            MQTT_PORT: 1883
            MQTT_TOPIC: meter/#
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_HOST: database
            POSTGRES_PORT: 5432
        networks:
            - theBoringNetwork
        depends_on:
            - mqttserver
            - database
            - command_runner
        develop:
          watch:
            - path: ./connector/src
              action: rebuild
        restart: on-failure


    simulator: 
        build:
            context: .
            dockerfile: simulator/Dockerfile
        image: my_simulator_image:latest
        environment:
            MQTT_HOST: mqtt://mqttserver
            MQTT_PORT: 1883
            MQTT_TOPIC: meter
            DEVICE_ID: e0e7e666-bca0-43c6-9d1d-bbc66a159b5f
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_HOST: database
            POSTGRES_PORT: 5432
        networks:
            - theBoringNetwork
        depends_on:
            - mqttserver
            - database
            - command_runner
        develop:
          watch:
            - path: ./simulator/src
              action: rebuild
        restart: on-failure

    grafana:
        build:
            context: .
            dockerfile: grafana/Dockerfile
        image: my_grafana_image:latest
        environment: 
            GF_LOG_LEVEL: warn
            GF_SECURITY_ADMIN_USER: ${GRAFANA_USER}
            GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_HOST: database
            POSTGRES_PORT: 5432
        ports:
            - "3000:3000"
        networks:
            - theBoringNetwork
networks:
  theBoringNetwork:
    driver: bridge